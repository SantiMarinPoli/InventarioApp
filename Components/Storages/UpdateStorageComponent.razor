@using Entities
@using Business
@using Entities.Interface

@inject NavigationManager NavManager
<div>
    <EditForm Model="oStorage">
        <div class="form-group">
            <label>Fecha Entrada: </label>
            <InputDate @bind-Value="oStorage.LastUpdate" class="form-control"></InputDate>
        </div>
        <div class="form-group">
            <label>Cantidad Parcial: </label>
            <InputNumber @bind-Value="oStorage.PartialQuantity" class="form-control"></InputNumber>
        </div>
        <div class="form-group">
            <label>Producto: </label>
            <InputSelect @bind-Value="oStorage.ProductId" class="form-control">
                <option value="">Seleccionar producto...</option>
                @foreach (var product in products)
                {
                    <option value="@product.ProductId">@product.ProductName</option>
                }
            </InputSelect>
        </div>
        <div class="form-group">
            <label>Deposito: </label>
            <InputSelect @bind-Value="oStorage.WarehouseId" class="form-control">
                <option value="">Seleccionar Deposito...</option>
                @foreach (var warehouse in warehouses)
                {
                    <option value="@warehouse.WarehouseId">@warehouse.WarehouseName</option>
                }
            </InputSelect>
        </div>

        <input type="button" value="Editar Almacenamiento" @onclick="UpdateStorage" />
    </EditForm>
</div>

@code {
    [Parameter]
    public string idStorage { get; set; }
    StorageEntity oStorage = new StorageEntity();
    List<ProductEntity> products = new List<ProductEntity>();
    List<WarehouseEntity> warehouses = new List<WarehouseEntity>();

    protected override async Task OnInitializedAsync()
    {
        products = B_Product.ProductList();
        warehouses = B_Warehouse.WarehouseList();
        oStorage = B_Storage.StorageById(idStorage);
    }

    private void UpdateStorage()
    {
        B_Storage.CRUDStorage(oStorage, IOperator.Update);
        NavManager.NavigateTo("storage/list");
    }
}
