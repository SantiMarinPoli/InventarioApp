@using Entities
@using Business

<hr />
<select class="form-control" @onchange="CategoryChange">
    <option value="">Seleccione Categoria...</option>
    @foreach(var category in categories)
    {
        <option value="@category.CategoryId">@category.CategoryName</option>
    }
</select>

<hr />

<table class="table table-hover table-bordered" >
    <thead>
        <tr>
            <th>Referencia</th>
            <th>Nom. Producto</th>
            <th>Categoria</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var product in tmpProducts)
        {
            <tr>
                <td>@product.ProductId</td>
                <td>@product.ProductName</td>
                <td>@product.CategoryId</td>
                <td>
                    <a href="product/update/@product.ProductId">Editar</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@message

@code {
    List<ProductEntity> products = new List<ProductEntity>();
    List<ProductEntity> tmpProducts = new List<ProductEntity>();
    List<CategoryEntity> categories = new List<CategoryEntity>();
    string message;
    protected override async Task OnInitializedAsync()
    {
        products = B_Product.ProductList();
        tmpProducts = products;
        categories = B_Category.CategoryList();
    }
    private void CategoryChange(ChangeEventArgs e)
    {
        //message = e.Value.ToString();
        tmpProducts = products.Where(x => x.CategoryId == e.Value.ToString()).ToList();
    }
}
