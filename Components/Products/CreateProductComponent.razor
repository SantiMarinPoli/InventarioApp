@using Entities
@using Business
@using Entities.Interface

@inject NavigationManager NavManager
<div>
    <EditForm Model="oProduct">
        <div class="form-group">
            <label>Referencia: </label>
            <InputText @bind-Value="oProduct.ProductId" class="form-control"></InputText>
        </div>
        <div class="form-group">
            <label>Nombre del producto: </label>
            <InputText @bind-Value="oProduct.ProductName" class="form-control"></InputText>
        </div>
        <div class="form-group" >
            <label>Descripcion: </label>
            <InputTextArea @bind-Value="oProduct.ProductDescription" class="form-control"></InputTextArea>
        </div>
        <div class="form-group">
            <label>Categoria: </label>
            <InputSelect @bind-Value="oProduct.CategoryId" class="form-control">
               <option value="">Seleccionar categoria...</option>
                @foreach(var category in categories)
                {
                    <option value="@category.CategoryId">@category.CategoryName</option>
                }
            </InputSelect>
        </div>

        <div class="form-group">
            <input type="button" class="form-control btn btn-success" value="Agregar Producto" @onclick="SaveProduct" />
        </div>
    </EditForm>
</div>
@code {
    ProductEntity oProduct = new ProductEntity();
    List<CategoryEntity> categories = new List<CategoryEntity>();

    protected override async Task OnInitializedAsync() 
    {
        categories = B_Category.CategoryList();
    }

    private void SaveProduct()
    {
        B_Product.CRUDProduct(oProduct,IOperator.Create);
        NavManager.NavigateTo("product/list");
    }
}
